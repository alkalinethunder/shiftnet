/* * Project: Shiftnet *  * Copyright (c) 2017 Watercolor Games. All rights reserved. For internal use only. *  *  * The above copyright notice and this permission notice shall be included in all * copies or substantial portions of the Software. *  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE * SOFTWARE. */using System;using System.Collections.Generic;using System.ComponentModel;using System.Data;using System.Drawing;using System.Linq;using System.Text;using System.Threading.Tasks;using System.Windows.Forms;namespace Plex.Engine{    public static class Infobox    {        // Set the infobox's interface to null        private static IInfobox _infobox = null;                        /// <summary>        /// Shows an infobox        /// </summary>        /// <param name="title">Infobox title</param>        /// <param name="message">Infobox message</param>        public static void Show(string title, string message, Action callback = null)        {            Desktop.InvokeOnWorkerThread(() =>            {                _infobox.Open(title, message, callback);            });        }        public static void PromptText(string title, string message, Action<string> callback, bool isPassword = false)        {            Desktop.InvokeOnWorkerThread(() =>            {                _infobox.PromptText(title, message, callback, isPassword);            });        }        public static void PromptYesNo(string title, string message, Action<bool> callback)        {            Desktop.InvokeOnWorkerThread(() =>            {                _infobox.PromptYesNo(title, message, callback);            });        }        /// <summary>        /// Inits an infobox        /// </summary>        /// <param name="info">Interface for infobox</param>        public static void Init(IInfobox info)        {            _infobox = info;        }    }        // Infobox Interface    public interface IInfobox    {        void Open(string title, string msg, Action callback = null);        void PromptText(string title, string message, Action<string> callback, bool isPassword);        void PromptYesNo(string title, string message, Action<bool> callback);    }}