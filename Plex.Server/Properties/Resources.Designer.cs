//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Plex.Server.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Shiftnet.Server.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to /* Shiftnet Ports data file
        /// *
        /// * This file contains information about all ports in the game&apos;s campaign.
        /// *
        /// */
        ///
        ///[
        ///	{
        ///		FriendlyName: &quot;SMTP mailserver (unencrypted)&quot;,
        ///		AttachTo: &quot;MailServer&quot;,
        ///		Value: 25,
        ///		Name: &quot;smtp&quot;,
        ///	},
        ///	{
        ///		FriendlyName: &quot;File Transfer Protocol&quot;,
        ///		AttachTo: &quot;Computer, NAS, WebServer, Mobile&quot;,
        ///		Value: 21,
        ///		Name: &quot;ftp&quot;,
        ///	},
        ///	{
        ///		FriendlyName: &quot;Plexgate Terminal server&quot;,
        ///		AttachTo: &quot;Computer, WebServer, Mobile&quot;,
        ///		Value: 22,
        ///		Name: &quot;ssh&quot;,
        ///	},
        ///	{
        ///		FriendlyName: &quot;Plexgate Desktop server [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string HardcodedPorts_temp {
            get {
                return ResourceManager.GetString("HardcodedPorts_temp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to /* Rank example
        /// *
        /// * Ranks are used by the server to give players a sense of progression. As the user ranks up,
        /// * they earn perks such as more upgrade slots and a bigger MoneyMate budget.
        /// *
        /// * The rank system is also used by the server&apos;s world generator to generate cash and resources
        /// * for each NPC system in the world based on their rank.
        /// * 
        /// * Your server&apos;s economy ultimately depends on the budget given to each rank, and the amount of NPCs
        /// * generated for each rank, so we let you decide the  [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string ranks {
            get {
                return ResourceManager.GetString("ranks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap server {
            get {
                object obj = ResourceManager.GetObject("server", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///	&quot;{ERR_SYNTAXERROR}&quot;: &quot;Syntax error.&quot;
        ///}.
        /// </summary>
        internal static string server_lang {
            get {
                return ResourceManager.GetString("server_lang", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to [
        ///	{
        ///		Category: &quot;Server&quot;,
        ///		Name: &quot;Test server upgrade&quot;,
        ///		Description: &quot;This upgrade is stored on the server. This is possible thanks to the new upgrades system being server-side.&quot;,
        ///		Cost: 5000,
        ///		Dependencies: &quot;&quot;,
        ///		Purchasable: true
        ///	}
        ///].
        /// </summary>
        internal static string upgrades {
            get {
                return ResourceManager.GetString("upgrades", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap user {
            get {
                object obj = ResourceManager.GetObject("user", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
    }
}
